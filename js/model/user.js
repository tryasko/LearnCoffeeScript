// Generated by CoffeeScript 1.6.2
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['backbone', 'validator'], function(Backbone, Validator) {
  'use strict';
  var Model, _ref;

  return Model = (function(_super) {
    __extends(Model, _super);

    function Model() {
      _ref = Model.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Model.prototype.defaults = {
      sex: 'Мужской'
    };

    Model.prototype.validation = {
      name: [
        {
          required: true,
          msg: 'Поле "Имя" не может быть пустым!'
        }, {
          pattern: /^[А-Яа-я]{1,}$/,
          msg: 'Введите свое имя кириллицей!'
        }
      ],
      age: [
        {
          required: true,
          msg: 'Поле "Возраст" не может быть пустым!'
        }, {
          range: [10, 100],
          msg: 'Вы не можете быть младше 10 и старше 100 лет!'
        }
      ],
      job: [
        {
          required: true,
          msg: 'Поле "Работа" не может быть пустым'
        }, {
          pattern: /^[А-Яа-я]{1,}$/,
          msg: 'Введите профессию кириллицей!'
        }
      ],
      sex: [
        {
          required: true,
          msg: 'Поле "Пол" не может быть пустым'
        }, {
          oneOf: ['Мужской', 'Женский'],
          msg: 'Выберите правильно пол!'
        }
      ]
    };

    return Model;

  })(Backbone.Model);
});
