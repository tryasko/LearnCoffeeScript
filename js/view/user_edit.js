// Generated by CoffeeScript 1.6.2
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['jquery', 'underscore', 'backbone'], function($, _, Backbone) {
  'use strict';
  var View, _ref;

  return View = (function(_super) {
    __extends(View, _super);

    function View() {
      _ref = View.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    View.prototype.id = 'userInfo';

    View.prototype.initialize = function() {
      return Backbone.Validation.bind(this);
    };

    View.prototype.template = _.template($('#userInfoEditTemplate').html());

    View.prototype.render = function() {
      this.$el.html(this.template({
        data: this.model.toJSON()
      }));
      return this;
    };

    View.prototype.events = {
      'click .save': 'saveInfo'
    };

    View.prototype.saveInfo = function() {
      var isErrorValidate, newInfo;

      newInfo = {
        name: this.$('.user-name').val(),
        age: this.$('.user-age').val(),
        job: this.$('.user-job').val(),
        sex: this.$('.user-sex').val()
      };
      isErrorValidate = this.model.validate(newInfo);
      if (isErrorValidate) {
        return this.showErrorValidate(isErrorValidate);
      } else {
        this.model.set({
          name: newInfo.name,
          age: parseInt(newInfo.age, 10),
          job: newInfo.job,
          sex: newInfo.sex
        });
        return window.location.hash = '#info/user/' + this.model.get('id');
      }
    };

    View.prototype.showErrorValidate = function(errors) {
      var error, key, _results;

      _results = [];
      for (key in errors) {
        error = errors[key];
        _results.push(alert(error));
      }
      return _results;
    };

    return View;

  })(Backbone.View);
});
