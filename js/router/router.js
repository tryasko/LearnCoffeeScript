// Generated by CoffeeScript 1.6.2
define(['jquery', 'backbone', 'utils/user_collection_cache', 'view/people', 'view/user_info', 'view/user_edit', 'view/page404'], function($, Backbone, userCollectionCache, AppViewPeople, AppViewUserInfo, AppViewUserEdit, AppViewPage404) {
  'use strict';  return Backbone.Router.extend({
    routes: {
      '': 'index',
      'users': 'index',
      'info/user/:id': 'info',
      'edit/user/:id': 'edit',
      '*path': 'page404'
    },
    index: function() {
      var userCollectionView;

      $('#userInfo').remove();
      if (!$('#userList').length) {
        userCollectionView = new AppViewPeople({
          collection: userCollectionCache
        });
        $('body').html(userCollectionView.render().el);
      }
      return Backbone.trigger('deselect:all');
    },
    info: function(id) {
      var availability;

      availability = userCollectionCache.some(function(userModel) {
        var userInfoView;

        if (userModel.get('id') === +id) {
          userInfoView = new AppViewUserInfo({
            model: userModel
          });
          this.index();
          userModel.trigger('select:current');
          $('body').append(userInfoView.render().el);
          return true;
        }
      }, this);
      if (!availability) {
        return this.page404();
      }
    },
    edit: function(id) {
      var availability;

      availability = userCollectionCache.some(function(userModel) {
        var userInfoEdit;

        if (userModel.get('id') === +id) {
          userInfoEdit = new AppViewUserEdit({
            model: userModel
          });
          this.index();
          userModel.trigger('select:current');
          $('body').append(userInfoEdit.render().el);
          return true;
        }
      }, this);
      if (!availability) {
        return this.page404();
      }
    },
    page404: function() {
      return new AppViewPage404().render();
    }
  });
});
