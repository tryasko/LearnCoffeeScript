// Generated by CoffeeScript 1.6.2
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['jquery', 'backbone', 'utils/user_collection_cache', 'view/people', 'view/user_info', 'view/user_edit', 'view/page404'], function($, Backbone, userCollectionCache, AppViewPeople, AppViewUserInfo, AppViewUserEdit, AppViewPage404) {
  'use strict';
  var Router, _ref;

  return Router = (function(_super) {
    __extends(Router, _super);

    function Router() {
      _ref = Router.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Router.prototype.routes = {
      '': 'index',
      'users': 'index',
      'info/user/:id': 'info',
      'edit/user/:id': 'edit',
      '*path': 'page404'
    };

    Router.prototype.index = function() {
      var userCollectionView;

      $('#userInfo').remove();
      if (!$('#userList').length) {
        userCollectionView = new AppViewPeople({
          collection: userCollectionCache
        });
        $('body').html(userCollectionView.render().el);
      }
      return Backbone.trigger('deselect:all');
    };

    Router.prototype.info = function(id) {
      var availability;

      availability = userCollectionCache.some(function(userModel) {
        var userInfoView;

        if (userModel.get('id') === +id) {
          userInfoView = new AppViewUserInfo({
            model: userModel
          });
          this.index();
          userModel.trigger('select:current');
          $('body').append(userInfoView.render().el);
          return true;
        }
      }, this);
      if (!availability) {
        return this.page404();
      }
    };

    Router.prototype.edit = function(id) {
      var availability;

      availability = userCollectionCache.some(function(userModel) {
        var userInfoEdit;

        if (userModel.get('id') === +id) {
          userInfoEdit = new AppViewUserEdit({
            model: userModel
          });
          this.index();
          userModel.trigger('select:current');
          $('body').append(userInfoEdit.render().el);
          return true;
        }
      }, this);
      if (!availability) {
        return this.page404();
      }
    };

    Router.prototype.page404 = function() {
      return new AppViewPage404().render();
    };

    return Router;

  })(Backbone.Router);
});
